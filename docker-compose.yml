services:
  db:
    image: postgres:15
    container_name: driver_rating_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: driver
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d driver"]
      interval: 5s
      timeout: 3s
      retries: 10
    volumes:
      - pgdata:/var/lib/postgresql/data

  api:
    build: .
    container_name: driver_rating_api
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    environment:
      # IMPORTANT: inside Docker, use host "db" not "localhost"
      DATABASE_URL: postgresql://postgres:${POSTGRES_PASSWORD:-postgres}@db:5432/driver
      SECRET_KEY: ${SECRET_KEY:-dev-change-me}
      STAFF_SECRET_KEY: ${STAFF_SECRET_KEY:-dev-change-me-staff}
    ports:
      - "8000:8000"
    volumes:
      - ./:/app  # hot-reload on code changes
  frontend:
    image: node:20-alpine
    container_name: driver_frontend
    working_dir: /app
    environment:
      - VITE_API_BASE=http://localhost:8000
    ports:
      - "5173:5173"
    volumes:
      - ./driver-frontend:/app
      - frontend_node_modules:/app/node_modules
    command: sh -c "npm install && npm run dev"

volumes:
  pgdata:
  frontend_node_modules: